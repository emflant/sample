norm_graph(lb = 2.33, ub=4)
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
norm_graph(lb = 2.33, ub=4)
# 허용수준 2.5 %
norm_graph(lb = 1.96, ub=4)
get_bond_pv(10000000, 0.07, 0.1, 5)
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
v
# 무이표채(zero-coupon bond)
get_bond_pv(10000000, 0, 0.1, 10)
# 8000000
# 9900000
sum(get_bond_pv(10000000, 0.07, 0.1, 5)$pv)
# 10000000
get_irr(10000000, 0.05, 10, 11000000)
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
# 10000000
get_irr(10000000, 0.05, 10, 11000000)
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
# 10000000
get_irr(10000000, 0.05, 10, 11000000)
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
# 10000000
get_irr(10000000, 0.05, 10, 11000000)
# 허용수준 2.5 %
norm_graph(lb = 1.96, ub=4)
norm_graph(lb = -4, ub=4)
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
get_bond_pv(10000000, 0, 0.1, 10)
get_duration(10000000, 0, 0.1, 10)
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
get_duration(10000000, 0, 0.1, 10)
get_duration(1000000, 0.08, 0.08, 5)
get_duration(100, 0.08, 0.08, 5)
sum(get_duration(100, 0.08, 0.08, 5)$pv)
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
get_duration(100, 0.08, 0.08, 5)
get_duration(100, 0.08, 0.08, 5)
get_duration(100, 0.08, 0.08, 6)
sum(get_duration(100, 0.08, 0.08, 6)$pv)
sum(get_duration(100, 0.08, 0.08, 6)$pv_n)
sum(get_duration(100, 0.08, 0.08, 6)$pv_n) / sum(get_duration(100, 0.08, 0.08, 6)$pv)
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
get_duration(100, 0.08, 0.08, 6)
ensity(rnorm(100, 0, 10)
density(rnorm(100, 0, 10))
# 밀도 그림(density)
plot(density(rnorm(100, 0, 10)))
density(rnorm(100, 0, 10))
d <- density(rnorm(100, 0, 10))
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
get_duration(100, 0.08, 0.08, 6)
get_duration(100, 0.08, 0.08, 6)
norm_graph(lb = 2.33, ub=4)
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
norm_graph(lb = 2.33, ub=4)
norm_graph(lb = -4, ub=4)
# 허용수준 2.5 %
norm_graph(lb = 1.96, ub=4)
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
norm_graph(lb = 2.33, ub=4)
library(readr)
install.packages("readr")
read_csv("D:\workspace\data\아파트(매매)__실거래가_201801.csv")
read_csv("D:\\workspace\\data\\아파트(매매)__실거래가_201801.csv")
library(readr)
read_csv("D:\\workspace\\data\\아파트(매매)__실거래가_201801.csv")
/
read_csv("D:/workspace/data/아파트(매매)__실거래가_201801.csv")
source('D:/workspace/sample/R/risk3.R', encoding = 'UTF-8')
read_csv("D:/workspace/data/아파트(매매)__실거래가_201801.csv", encoding = 'UTF-8')
read_csv("D:/workspace/data/아파트(매매)__실거래가_201801.csv")
read_csv("D:/workspace/data/아파트(매매)__실거래가_201801.csv")
read_csv("D:/workspace/data/apartment_201801.csv")
Sys.setlocale(category = "LC_CTYPE", locale = "ko_KR.UTF-8")
read_csv("D:/workspace/data/apartment_201801.csv")
par(family="NanumGothic")
read_csv("D:/workspace/data/apartment_201801.csv")
read_csv("D:/workspace/data/apartment_201801.csv")
read_csv("D:/workspace/data/apartment_201801.csv")
read_csv("D:/workspace/data/아파트(매매)__실거래가_201801.csv")
library(readr)
read_csv("D:/workspace/data/아파트(매매)__실거래가_201801.csv")
read_csv("D:/workspace/data/apart_201801.csv")
apart_201801 <- read_csv("D:/workspace/data/apart_201801.csv")
View(apart_201801)
plot(apart_201801)
plot(apart_201801)
# Sys.setlocale(category = "LC_CTYPE", locale = "ko_KR.UTF-8")
# par(family="NanumGothic")
Sys.setlocale(category = "LC_CTYPE", locale = "ko_KR.UTF-8")
plot(apart_201801)
plot(c('가', '나', ''))
plot(c('가', '나', '다'), c(1,2,3))
plot(c("가", "나", "다"), c(1,2,3))
plot(x = c("가", "나", "다"), y = c(1,2,3))
plot(x = c(1,2,3), y = c(1,2,3))
plot(x = c("a", "b", "c"), y = c(1,2,3))
plot(x = factor(c("a", "b", "c")), y = c(1,2,3))
apart_201801 <- read_csv("D:/workspace/data/apart_201801.csv")
apart_201801
apart_201802 <- read_csv("D:/workspace/data/apart_2018021.csv")
apart_201802 <- read_csv("D:/workspace/data/apart_201802.csv")
apart_201802 <- read_csv("D:/workspace/data/apart_201802.csv")
result <- rbind(apart_201801, apart_201802)
result
library(dplyr)
nstall.packages("dplyr")
install.packages("dplyr")
library(dplyr)
apart <- rbind(apart_201801, apart_201802)
apart_201801 <- read_csv("D:/workspace/data/apart_201801.csv")
apart_201802 <- read_csv("D:/workspace/data/apart_201802.csv")
apart <- rbind(apart_201801, apart_201802)
apart
View(apart)
filter(apart, 시군구 = "강원도 강릉시 견소동")
filter(apart, 시군구 == "강원도 강릉시 견소동")
library(stringr)
filter(apart, str_detect(시군구,"강원도 강릉시 견소동"))
filter(apart, str_detect(시군구,"답십리로"))
filter(apart, str_detect(시군구,"답십리"))
filter(apart, str_detect(단지명,"래미안위브"))
filter(apart, str_detect(시군구,"답십리"))
filter(apart, str_detect(단지명,"래미안위브"))
filter(apart, str_detect(단지명,"은"))
filter(apart, str_detect(단지명,"은마"))
r1 <- filter(apart, str_detect(단지명,"은마"))
View(r1)
r1 <- filter(apart, str_detect(단지명,"^은마"))
View(r1)
r1 <- filter(apart, str_detect(단지명,"^은마") && str_detect(시군구,"대치동"))
View(r1)
r1 <- filter(apart, str_detect(단지명,"^은마") & str_detect(시군구,"대치동"))
View(r1)
r1 <- filter(apart, str_detect(단지명,"^은마") & str_detect(시군구,"대치동"))
r1 <- apart %>%
filter(str_detect(단지명,"^은마") & str_detect(시군구,"대치동"))
r1
r2 <- apart %>%
group_by(시군구) %>%
summarise(count = n(), trade = mean(거래금액(만원), na.rm = TRUE))
r2 <- apart %>%
group_by(시군구) %>%
summarise(count = n(), trade = mean("거래금액(만원)", na.rm = TRUE))
View(r2)
warnings()
r2 <- apart %>%
group_by(시군구) %>%
summarise(count = n(), trade = mean("거래금액(만원)"))
warning()
warnings()
r2 <- apart %>%
group_by(시군구) %>%
summarise(count = n(), trade = mean("거래금액(만원)"))
warnings()
apart
r2 <- apart %>%
group_by(시군구) %>%
summarise(count = n(), trade = mean(`거래금액(만원)`))
warnings()
apart
r2
r2 <- apart %>%
group_by(시군구) %>%
summarise(count = n(), trade = mean("거래금액(만원)"))
apart_201802
r2 <- apart %>%
group_by(시군구) %>%
summarise(count = n(), trade = mean(`거래금액(만원)`))
r2
View(r2)
r2 <- apart %>%
group_by(시군구) %>%
summarise(count = n(), trade = mean(`거래금액(만원)`)) %>%
arrange(trade)
View(r2)
r2 <- apart %>%
group_by(시군구) %>%
summarise(count = n(), trade = mean(`거래금액(만원)`)) %>%
arrange(desc(trade))
View(r2)
apart_201801 <- read_csv("D:/workspace/data/apart_201801.csv")
library(readr)
Sys.setlocale(category = "LC_CTYPE", locale = "ko_KR.UTF-8")
library(readr)
apart_201801 <- read_csv("D:/workspace/data/apart_201801.csv")
apart_201802 <- read_csv("D:/workspace/data/apart_201802.csv")
#apart_201802
apart <- rbind(apart_201801, apart_201802)
apart
library(dplyr)
library(stringr)
filter(apart, 시군구 == "강원도 강릉시 견소동")
filter(apart, str_detect(시군구,"답십리"))
r1 <- filter(apart, str_detect(단지명,"^은마") & str_detect(시군구,"대치동"))
r1 <- apart %>%
filter(str_detect(단지명,"^은마") & str_detect(시군구,"대치동"))
r2 <- apart %>%
group_by(시군구) %>%
summarise(count = n(), trade = mean(`거래금액(만원)`)) %>%
arrange(desc(trade))
warnings()
apart
r2
View(r2)
View(r2)
install.packages("mlbench")
library(mlbench)
data(Ozone)
View(Ozone)
plot(Ozone$V8, Ozone$V9)
library(help=“mlbench”)
plot(Ozone$V8, Ozone$V9, type = "l")
plot(Ozone$V8, Ozone$V9, type = "p")
plot(Ozone$V8, Ozone$V9, type = "b")
plot(Ozone$V8, Ozone$V9, type = "b")n
plot(Ozone$V8, Ozone$V9, type = "n")
plot(Ozone$V8, Ozone$V9, type = "p")
library(help="mlbench")
plot(Ozone$V8, Ozone$V9, type = "p", xlab = "Sandburg Temperature")
plot(Ozone$V8, Ozone$V9, type = "p", xlab = "Sandburg Temperature",
ylab = "El Monte Temperature")
plot(Ozone$V8, Ozone$V9, type = "p",
xlab = "Sandburg Temperature",
ylab = "El Monte Temperature",
main = "Ozone")
plot(Ozone$V8, Ozone$V9, type = "p",
xlab = "Sandburg Temperature",
ylab = "El Monte Temperature",
main = "Ozone 농도")
plot(Ozone$V8, Ozone$V9, type = "p",
xlab = "Sandburg Temperature",
ylab = "El Monte Temperature",
main = "Ozone", pch = 20)
plot(Ozone$V8, Ozone$V9, type = "p",
xlab = "Sandburg Temperature",
ylab = "El Monte Temperature",
main = "Ozone", pch = 1, cex = ".1")
plot(Ozone$V8, Ozone$V9, type = "p",
xlab = "Sandburg Temperature",
ylab = "El Monte Temperature",
main = "Ozone", pch = 1, cex = .1)
plot(Ozone$V8, Ozone$V9, type = "p",
xlab = "Sandburg Temperature",
ylab = "El Monte Temperature",
main = "Ozone",
pch = 1, # 점의 종류
cex = .1, # 점의 크기
col="#FF0000"
)
plot(Ozone$V8, Ozone$V9, type = "p",
xlab = "Sandburg Temperature",
ylab = "El Monte Temperature",
main = "Ozone",
pch = 1, # 점의 종류
cex = 1, # 점의 크기
col="#FF0000"
)
plot(Ozone$V8, Ozone$V9, type = "p",
xlab = "Sandburg Temperature",
ylab = "El Monte Temperature",
main = "Ozone",
pch = 1, # 점의 종류
cex = 1, # 점의 크기
col="#FF0000",
xlim = c(0, 100),
ylim = c(0, 90)
)
plot(cars)
cars
plot(cars)
lines(lowess(cars))
abline(cars)
abline(a=-5, b=3.5, col="red")
plot(cars)
abline(a=-5, b=3.5, col="red")
abline(h=mean(cars$dist), lty=2)
abline(v=mean(cars$speed), lty=2)
plot(cars)
lines(lowess(cars))
abline(h=mean(cars$dist), lty=2)
abline(v=mean(cars$speed), lty=2)
lines(loess(cars))
lines(ksmooth(cars))
plot(cars)
lines(lowess(cars))
abline(h=mean(cars$dist), lty=2)
curve(sin, 0, 2*pi)
m <- lm(dist ~ speed, data = cars)
m
plot(cars)
plot(cars)
abline(m)
p <- predict(m, interval="confidence")
p
plot(cars, xlim = c(0.30))
plot(cars, xlim = c(0,30))
p <- predict(m, interval="confidence")
p
# interval=c("none", "confidence", "prediction")
p <- predict(m, interval="prediction")
p
# interval=c("none", "confidence", "prediction")
p <- predict(m, interval="prediction")
p
# interval=c("none", "confidence", "prediction")
p <- predict(m, interval="confidence")
p
boxplot(iris$Sepal.Width)
boxstats <- boxplot(iris$Sepal.Width)
View(boxstats)
boxstats$stats
middle(iris$Sepal.Width)
median(iris$Sepal.Width)
iris$Sepal.Width
boxplot(iris$Sepal.Width, notch = TRUE)
boxplot(iris$Sepal.Width)
boxplot(iris$Sepal.Width, notch = TRUE) # 중앙값에 대한 신뢰 구간이 오목하게 그려진다
boxstats2 <- boxplot(iris$Sepal.Width, notch = TRUE)
boxstats2$stats
boxstats2
boxstats
sv <- subset(iris, Species=="setosa" | Species=="versicolor")
sv
sv$Species <- factor(sv$Species)
boxplot(Sepal.Width ~ Species, data=sv, notch=TRUE)
r1 <- apart %>%
filter(str_detect(단지명,"^은마") & str_detect(시군구,"대치동"))
r1
View(r1)
r1 <- apart %>%
filter(str_detect(단지명,"^은마") &
str_detect(시군구,"대치동") &
`전용면적(㎡)` == 76.8)
r1
r1 <- apart %>%
filter(str_detect(단지명,"^은마") &
str_detect(시군구,"대치동") &
`전용면적(㎡)` == 76.8)
r1
r1 <- filter(apart, str_detect(단지명,"^은마") & str_detect(시군구,"대치동"))
r1 <- apart %>%
filter(str_detect(단지명,"^은마") &
str_detect(시군구,"대치동"))
View(r1)
r1 <- apart %>%
filter(str_detect(단지명,"^은마") &
str_detect(시군구,"대치동") &
`전용면적(㎡)` == 76.79)
r1
iris$Sepal.Width
r1$계약년월 <- factor(r1$계약년월)
r1$계약년월 <- factor(r1$계약년월)
boxplot(`거래금액(만원)` ~ 계약년월, data = r1)
boxplot(`거래금액(만원)`, data = r1)
boxplot(`거래금액(만원)`, data = r1)
boxplot(`거래금액(만원)` ~ 계약년월, data = r1)
boxplot(`거래금액(만원)` ~ 계약년월, data = r1, notch = TRUE)
boxplot(`거래금액(만원)` ~ 계약년월, data = r1)
r1
View(r1)
hist(iris$Sepal.Width, freq=FALSE)
lines(density(iris$Sepal.Width))
hist(iris$Sepal.Width, freq=FALSE)
hist(iris$Sepal.Width, freq=FALSE)
# FALSE면 다음 코드에서 보다시피 각 구간의 확률 밀도가 그려진다.
# 확률 밀도므로 막대 너비의 합이 1이 된다.
hist(iris$Sepal.Width, freq=FALSE)
hist(iris$Sepal.Width, freq=TRUE)
# freq 지정하지 않는 경우, 구간별 데이터의 개수(즉, 빈도)
hist(iris$Sepal.Width, freq=NULL)
# freq 지정하지 않는 경우, 구간별 데이터의 개수(즉, 빈도)
hist(iris$Sepal.Width)
# freq=FALSE면 다음 코드에서 보다시피 각 구간의 확률 밀도가 그려진다.
# 확률 밀도므로 막대 너비의 합이 1이 된다.
hist(iris$Sepal.Width, freq=FALSE)
h <- hist(iris$Sepal.Width, freq=FALSE)
sum(x$density) * 0.2  # x$breaks를 보면 막대의 너비가 0.2임을 알 수 있다.
sum(h$density) * 0.2  # x$breaks를 보면 막대의 너비가 0.2임을 알 수 있다.
filter(apart, str_detect(시군구,"장안"))
filter(apart, str_detect(시군구,"장안동"))
mean(seq(1:10))
mean(seq(0:10))
mean(seq(1:10))
mean(seq(1:5))
mean(seq(1:5))
var(seq(1:5))
var(seq(1:5))
sd(seq(1:5))
sum((1:5-mean(1:5))^2)/(5-1)
sum((1:5-mean(1:5))^2)/(5)
-1
sum((1:5-mean(1:5))^2)/(5-1)
